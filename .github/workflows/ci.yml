name: ci

on:
  pull_request:
  push:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  test:
    name: Lint, test, and train (smoke)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [ "v0.1", "v0.2" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Lint (ruff)
        run: ruff check .

      - name: Unit tests (pytest)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q

      - name: Quick train smoke (${{ matrix.version }})
        run: python -m ml.train ${{ matrix.version }}

      - name: Verify artifacts exist (${{ matrix.version }})
        run: |
          set -euo pipefail
          test -f "artifacts/model_${{ matrix.version }}.joblib"
          test -f "artifacts/metrics_${{ matrix.version }}.json"
          echo "Artifacts for ${{ matrix.version }} look good."

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.version }}-artifacts
          path: artifacts/
          if-no-files-found: error
          retention-days: 7

  docker-build:
    name: Build Docker image (no push)
    runs-on: ubuntu-latest
    needs: test
    strategy:
      fail-fast: false
      matrix:
        version: [ "v0.1", "v0.2" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (validate only)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: false
          platforms: linux/amd64
          build-args: |
            APP_VERSION=${{ matrix.version }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ matrix.version }}-ci
